"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const i=require("react"),x=require("../../hooks/useThemeMode/index.js"),f=require("../../hooks/useThemeColor/index.js"),o=require("../../utils/colors/index.js"),l=require("../../utils/get-colors/index.js"),h=require("../../utils/sizes/index.js");function p({isLoading:n,isDisabled:d,color:e="auto",variant:r}){const{isDarkThemeMode:t}=x.default(),{themeColor:u}=f.default(),s=i.useMemo(()=>r==="contained"?e!=="auto"?o.ButtonColors[e]:u:o.BackgroundColors[t?"darkMode":"lightMode"],[r,e,u,t]),c=i.useMemo(()=>r==="outline"?e!=="auto"?o.ButtonColors[e]:u:l.default(o.BorderColors[t?"darkMode":"lightMode"]).opacity,[r,e,u,t]),a=i.useMemo(()=>r==="contained"?o.TextColors.white:r==="outline"?e!=="auto"?o.ButtonColors[e]:u:o.TextColors[t?"darkMode":"lightMode"],[r,e,u,t]);return{buttonStyles:i.useMemo(()=>({boxSizing:"border-box",display:"flex",alignItems:"center",justifyContent:"center",position:"relative",overflow:"hidden",width:"auto",minWidth:"40px",height:"40px",padding:"0px 16px",textTransform:"capitalize",fontSize:h.TypographySize.text,fontWeight:"bold",borderRadius:"8px",cursor:n?"wait":d?"not-allowed":"pointer",boxShadow:o.ShadowColors[t?"darkMode":"lightMode"],borderColor:n||d?l.default(c).opacity:c,backgroundColor:n||d?l.default(s).opacity:s,color:n||d?l.default(a).opacity:a}),[n,d,c,s,a,t])}}exports.useButtonStyle=p;
